---
import { Icon } from 'astro-icon/components';

const { pathname } = Astro.url;

const dockItems = [
  {
    label: "Nav",
    action: "sidebar",
    icon: "equals"
  },
  {
    label: "Learn",
    href: "/learn/quick-start",
    root: "/learn",
    icon: "book-open-text"
  },
  {
    label: "API",
    href: "/reference/core/signal",
    root: "/reference",
    icon: "code"
  },
  {
    label: "Plugins",
    href: "/plugins",
    root: "/plugins",
    icon: "puzzle-piece"
  },
];

---

<style is:global>
  /* Toggle hamburger/close icons */
  #sidebar-drawer:checked ~ .drawer-content {
    .sidebar-hamburger {
      display: none;
    }

    .sidebar-close {
      display: block;
    }
    .foo {
      opacity: 0.3;
      color: var(--text-secondary);
    }
  }
</style>

<!-- Bottom dock - only visible on mobile -->
<div
  class="dock dock-sm fixed bottom-0 left-1/2 transform -translate-x-1/2 bg-base-300 rounded-box lg:hidden z-40 shadow-lg"
>
  {
    dockItems.map((item) =>
      item.action === "sidebar" ? (
        <label for="sidebar-drawer" class="cursor-pointer">
          <!-- Hamburger icon (shown when sidebar is closed) -->
          <svg
            class="w-5 h-5 sidebar-hamburger"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
          <!-- Close icon (shown when sidebar is open) -->
          <svg
            class="w-5 h-5 sidebar-close hidden"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
          <span class="text-sm">{item.label}</span>
        </label>
      ) : (
        <a
          href={item.href}
          class:list={[
            "foo",
            { "text-primary": item.root && pathname.startsWith(item.root) },
          ]}
        >
          <Icon name={`ph:${item.icon}${item.root && pathname.startsWith(item.root) ? '-fill' : ''}`} width={24} height={24} />
          <span class="text-sm">{item.label}</span>
        </a>
      ),
    )
  }
</div>
