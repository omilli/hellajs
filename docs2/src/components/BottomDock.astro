---
const { pathname } = Astro.url;

const dockItems = [
  {
    id: "nav",
    label: "Nav",
    action: "sidebar",
  },
  {
    id: "learn",
    label: "Learn",
    href: "/learn/quick-start",
    root: "/learn",
  },
  {
    id: "api",
    label: "API",
    href: "/reference/core/signal",
    root: "/reference",
  },
  {
    id: "plugins",
    label: "Plugins",
    href: "/plugins",
    root: "/plugins",
  },
];
---

<style is:global>
  /* Show hamburger icon when sidebar is closed, close icon when open */
  #sidebar-drawer:not(:checked) ~ .drawer-content .sidebar-hamburger {
    display: block;
  }
  #sidebar-drawer:not(:checked) ~ .drawer-content .sidebar-close {
    display: none;
  }
  
  #sidebar-drawer:checked ~ .drawer-content .sidebar-hamburger {
    display: none;
  }
  #sidebar-drawer:checked ~ .drawer-content .sidebar-close {
    display: block;
  }
</style>

<!-- Bottom dock - only visible on mobile -->
<div
  class="dock dock-sm fixed bottom-0 left-1/2 transform -translate-x-1/2 bg-base-300 rounded-box lg:hidden z-40 shadow-lg"
>
  {
    dockItems.map((item) =>
      item.action === "sidebar" ? (
        <label for="sidebar-drawer" class="cursor-pointer">
          <!-- Hamburger icon (shown when sidebar is closed) -->
          <svg
            class="w-5 h-5 sidebar-hamburger"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
          <!-- Close icon (shown when sidebar is open) -->
          <svg
            class="w-5 h-5 sidebar-close hidden"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
          <span class="dock-label">{item.label}</span>
        </label>
      ) : (
        <a
          href={item.href}
          class:list={[
            { "dock-active text-primary": item.root && pathname.startsWith(item.root) },
          ]}
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            {item.id === "learn" && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
              />
            )}
            {item.id === "api" && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"
              />
            )}
            {item.id === "plugins" && (
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z"
              />
            )}
          </svg>
          <span class="dock-label">{item.label}</span>
        </a>
      ),
    )
  }
</div>
